Favian Kharisma Hazman
1606886463
Tutorial-4 APAP

View Pilot berdasarkan License Number
1. Implementasikan method di PilotController untuk menampilkan seorang pilot
berdasarkan license number. Method ini menerima parameter licenseNumber dan
mengembalikan view (view-pilot.html).

@RequestMapping(value= "/pilot/view", method= RequestMethod.GET)
private String addPilotSubmit(@RequestParam(value = "licenseNumber") String licenseNumber, Model model) {
	PilotModel pilot = pilotService.getPilotDetailByLicenseNumber(licenseNumber);
	model.addAttribute("pilot",pilot);
	return "viewPilot";
}

2. Buatlah tampilan view-pilot.html seperti gambar dibawah ini. (Tambahkan link untuk
menambahkan penerbangan)

<!DOCTYPE html>
<html lang="en" xmlns:th="http://www.thymeleaf.org">
<head>
    <title th:text="${pilot.licenseNumber}"></title>
</head>
<body>
    <h3 th:text="'Pilot License Number : ' + ${pilot.licenseNumber}"></h3>
    <h3 th:text="'Name :' + ${pilot.name}"></h3>
    <h3 th:text="'Fly Hour: ' + ${pilot.flyHour}"></h3>
    <br>
    <h2>Flights</h2>
    <table style="width:100%">
    <tr>
    <th>Flight Number</th>
    <th>Origin</th> 
    <th>Destination</th>
    <th>Timestamp</th>
    <th>Pilot</th>
    <th>Pilot License</th>
  </tr>
<tr style="text-align:center;" th:each="flight: ${pilot.getPilotFlight()}">
    <td th:text="${flight.flightNumber}" />
    <td th:text="${flight.origin}" />
    <td th:text="${flight.destination}" />
    <td th:text="${flight.time}" />
    <td><a th:href="@{/flight/delete/{id}(id=${flight.id})}">Delete</a></td>
            <td><a th:href="@{/flight/update/{id}(id=${flight.id})}">Update</a></td>
    
</tr>
</table>
</br>
        <a th:href="'/flight/add/'+${pilot.licenseNumber}">Add Flight</a>
                <a th:href="'/pilot/update/'+${pilot.licenseNumber}">Update Pilot Data</a>
                <a th:href="@{/pilot/delete/{id}(id=${pilot.id})}">Delete Pilot Data</a>

        <a href="/">Back to Home</a>
   
</body>
</html>


3. Jalankan program untuk menambah penerbangan seorang pilot
Home > Search/Add Pilot > Add Flight

Latihan

1. Ubah method view pilot agar menampilkan daftar flight yang terdaftar untuk setiap
pilot​.

  <h2>Flights</h2>
    <table style="width:100%">
    <tr>
    <th>Flight Number</th>
    <th>Origin</th> 
    <th>Destination</th>
    <th>Timestamp</th>
    <th>Pilot</th>
    <th>Pilot License</th>
  </tr>
<tr style="text-align:center;" th:each="flight: ${pilot.getPilotFlight()}">
    <td th:text="${flight.flightNumber}" />
    <td th:text="${flight.origin}" />
    <td th:text="${flight.destination}" />
    <td th:text="${flight.time}" />
    <td><a th:href="@{/flight/delete/{id}(id=${flight.id})}">Delete</a></td>
            <td><a th:href="@{/flight/update/{id}(id=${flight.id})}">Update</a></td>  
</tr>
</table>

2. Buatlah fitur delete​ untuk menghapus seorang pilot dan sebuah penerbangan.
Pada PilotController:
@RequestMapping(value= "/pilot/delete/{id}")
private String deletePilotSubmit(@PathVariable(value="id") long id) {
	pilotService.removePilot(id);
	return "deleted";
Pada html:
<a th:href="@{/pilot/delete/{id}(id=${pilot.id})}">Delete Pilot Data</a>

3. Buatlah fitur update​ untuk seorang pilot dan sebuah penerbangan.
(Notes: License Number seorang pilot tidak bisa diubah)
Pada PilotController:
@RequestMapping(value= "/pilot/update/{licenseNumber}", method= RequestMethod.GET)
private String updatePilot(@PathVariable(value="licenseNumber") String licenseNumber, Model model) {
	PilotModel upd = pilotService.getPilotDetailByLicenseNumber(licenseNumber);
	model.addAttribute("pilot",upd);
	return "updatePilot";
}

@RequestMapping(value= "/pilot/update/{licenseNumber}", method= RequestMethod.POST)
private String updatePilotSubmit(@PathVariable(value="licenseNumber") String licenseNumber, @ModelAttribute PilotModel pilot,Model model) {
		pilotService.getPilotDetailByLicenseNumber(pilot.getLicenseNumber()).setName(pilot.getName());
		pilotService.getPilotDetailByLicenseNumber(pilot.getLicenseNumber()).setFlyHour(pilot.getFlyHour());
		System.out.println(pilotService.getPilotDetailByLicenseNumber(pilot.getLicenseNumber()).getFlyHour());
		System.out.println(pilot.getFlyHour());
	return "updated";
}
Pada FlightController:
@RequestMapping(value = "/flight/update/{id}", method = RequestMethod.GET)
    private String updateFlight(@PathVariable(value = "id") Long id, Model model) {
        FlightModel flight = flightService.flightById(id);
        model.addAttribute("flight", flight);
        return "updateFlight";
    }

    @RequestMapping(value = "/flight/update/{id}", method = RequestMethod.POST)
    private String updateSubmitFlight(@PathVariable(value = "id") Long id, @ModelAttribute FlightModel flight) {
        flight.setId(id);
        flightService.updateFlight(flight);
        return "updated";
    }
4. Buatlah fitur ​untuk melihat ​penerbangan sehingga dapat menampilkan nama dan license
number dari pilot yang bertugas.
Pada Flight Controller:
 @RequestMapping(value= "/flight/view/all")
    private String viewAll(Model model) {
    	List<FlightModel> flightList = flightService.getAllFlight();
    	model.addAttribute("flight",flightList);
    	return "viewall";
    }